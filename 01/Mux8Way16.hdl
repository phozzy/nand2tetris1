// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    // not(or(sel[0], sel[1], sel[2])) - true only if 000
    Or(a=sel[0], b=sel[1], out=sel000or);
    Or(a=sel000or, b=sel[2], out=notsel000);
    Not(in=notsel000, out=sel000);

    // and(not(sel[0]), not(sel[1]), sel[2]) - true only if 001
    // and(not(or(sel[0], sel[1])), sel[2])
    Or(a=sel[0], b=sel[1], out=orsel001);
    Not(in=orsel001, out=norsel001);
    And(a=norsel001, b=sel[2], out=sel001);

    // and(not(sel[0]), sel[1], not(sel[2])) - true only if 010
    // and(not(or(sel[0], sel[2])), sel[1])
    Or(a=sel[0], b=sel[2], out=orsel010);
    Not(in=orsel010, out=norsel010);
    And(a=norsel010, b=sel[1], out=sel010);

    // and(not(sel[0]), sel[1], sel[2]) - true only if 011
    Not(in=sel[0], out=notsel011);
    And(a=notsel011, b=sel[1], out=andsel011);
    And(a=andsel011, b=sel[2], out=sel011);

    // and(sel[0], not(sel[1]), not(sel[2])) - true only if 100
    // and(sel[0], not(or(sel[1], sel[2])))
    Or(a=sel[1], b=sel[2], out=orsel100);
    Not(in=orsel100, out=norsel100);
    And(a=norsel100, b=sel[0], out=sel100);
}
